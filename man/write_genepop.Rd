% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_genepop.R
\name{write_genepop}
\alias{write_genepop}
\title{Used internally in stackr to write a genepop file from a tidy data frame}
\usage{
write_genepop(data, sep = NULL, pop.levels = NULL,
  genepop.header = "my firt genepop", markers.line.format = "line",
  filename = "stackr_genepop.gen", ...)
}
\arguments{
\item{data}{A file in the working directory or object in the global environment 
in wide or long (tidy) formats. See details for more info.}

\item{sep}{(optional) A character string separating alleles. 
Default: \code{sep = NULL}.}

\item{pop.levels}{(optional, string) A character string with your populations ordered.
Default: \code{pop.levels = NULL}.}

\item{genepop.header}{The first line of the Genepop file.
Default: \code{genepop.header = "my firt genepop"}.}

\item{markers.line.format}{(optional, character) You can write the markers 
on a single line separated by commas \code{markers.line.format = "line"}, 
or have markers on a separate line, i.e. in one column, 
\code{markers.line.format = "column"} 
(not very useful with thousands of markers). 
Default: \code{markers.line.format = "line"}.}

\item{filename}{The name of the file written to the working directory.
Use the extension ".gen" at the end. 
Default: \code{filename = "stackr_genepop.gen"}.}

\item{...}{other parameters passed to the function.}
}
\value{
A genepop file is saved to the working directory.
}
\description{
Write a genepop file from a tidy data frame.
Used internally in \href{https://github.com/thierrygosselin/stackr}{stackr} 
and \href{https://github.com/thierrygosselin/assigner}{assigner}
and might be of interest for users.
}
\details{
\strong{Details for the sep argument}
This character is directly used in regular expressions using strigi. 
Some characters need to be preceeded by double backslashes \code{\\}. 
For instance, "/" works but "|" must be coded as "\\|".


\strong{Details for Input data:}
 
To discriminate the long from the wide format, 
the function \pkg{stackr} \code{\link[stackr]{read_long_tidy_wide}} searches 
for "MARKERS" in column names (TRUE = long format).
The data frame is tab delimitted.
\strong{Wide format:}
The wide format cannot store metadata info.
The wide format starts with these 2 id columns: 
\code{INDIVIDUALS}, \code{POP_ID} (that refers to any grouping of individuals), 
the remaining columns are the markers in separate columns storing genotypes.

\strong{Long/Tidy format:}
The long format is considered to be a tidy data frame and can store metadata info. 
(e.g. from a VCF see \pkg{stackr} \code{\link{tidy_genomic_data}}). A minimum of 4 columns
are required in the long format: \code{INDIVIDUALS}, \code{POP_ID}, 
\code{MARKERS} and \code{GENOTYPE or GT}. The rest are considered metata info.

\strong{2 genotypes formats are available:}
6 characters no separator: e.g. \code{001002 of 111333} (for heterozygote individual).
6 characters WITH separator: e.g. \code{001/002 of 111/333} (for heterozygote individual).
The separator can be any of these: \code{"/", ":", "_", "-", "."}.

\emph{How to get a tidy data frame ?}
\pkg{stackr} \code{\link{tidy_genomic_data}} can transform 6 genomic data formats 
in a tidy data frame.
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}

