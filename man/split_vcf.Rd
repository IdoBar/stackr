% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_vcf.R
\name{split_vcf}
\alias{split_vcf}
\title{Split a VCF file}
\usage{
split_vcf(data, strata, monomorphic.out = FALSE, common.markers = FALSE,
  pop.levels = NULL, pop.labels = NULL, pop.select = NULL,
  blacklist.id = NULL, whitelist.markers = NULL,
  parallel.core = parallel::detectCores() - 1)
}
\arguments{
\item{data}{11 options: VCF (SNPs or Haplotypes,
to make the vcf population ready, see details below),
plink, stacks haplotype file, genind (library(adegenet)),
genlight (library(adegenet)), gtypes (library(strataG)), genepop,
and a data frame in long/tidy or wide format.
\emph{See details} of \code{\link{tidy_genomic_data}}.}

\item{strata}{A file identical to the strata file usually used in stackr,
with an additional column named: \code{SPLIT}.
This new column contains numerical values
(e.g. 1, 1, 1, ..., 2, 2, 2, 2, ..., 3, 3, ...),
that indicate for each INDIVIDUALS/STRATA, how to split.
The number of VCF to split to is based on the max value found in the column
\code{SPLIT}, above this would result in 3 VCF files created).}

\item{monomorphic.out}{(optional) Should the monomorphic
markers present in the dataset be filtered out ?
Default: \code{monomorphic.out = TRUE}.}

\item{common.markers}{(optional) Logical. Default: \code{common.markers = TRUE},
will only keep markers in common (genotyped) between all the populations.}

\item{pop.levels}{(optional, string) This refers to the levels in a factor. In this
case, the id of the pop.
Use this argument to have the pop ordered your way instead of the default
alphabetical or numerical order. e.g. \code{pop.levels = c("QUE", "ONT", "ALB")}
instead of the default \code{pop.levels = c("ALB", "ONT", "QUE")}.
White spaces in population names are replaced by underscore.
Default: \code{pop.levels = NULL}.}

\item{pop.labels}{(optional, string) Use this argument to rename/relabel
your pop or combine your pop. e.g. To combine \code{"QUE"} and \code{"ONT"}
into a new pop called \code{"NEW"}:
(1) First, define the levels for your pop with \code{pop.levels} argument:
\code{pop.levels = c("QUE", "ONT", "ALB")}.
(2) then, use \code{pop.labels} argument:
\code{pop.levels = c("NEW", "NEW", "ALB")}.
To rename \code{"QUE"} to \code{"TAS"}:
\code{pop.labels = c("TAS", "ONT", "ALB")}.
Default: \code{pop.labels = NULL}. If you find this too complicated,
there is also the \code{strata} argument that can do the same thing,
see below.
White spaces in population names are replaced by underscore.}

\item{pop.select}{(string, optional) Selected list of populations for
the analysis. e.g. \code{pop.select = c("QUE", "ONT")} to select \code{QUE}
and \code{ONT} population samples (out of 20 pops).
Default: \code{pop.select = NULL}}

\item{blacklist.id}{(optional) A blacklist with individual ID and
a column header 'INDIVIDUALS'. The blacklist is an object in your
global environment or a file in the working directory
(e.g. "blacklist.txt").
Default: \code{blacklist.id = NULL}.}

\item{whitelist.markers}{(optional) A whitelist containing CHROM (character
or integer) and/or LOCUS (integer) and/or
POS (integer) columns header. To filter by chromosome and/or locus and/or by snp.
The whitelist is in the working directory (e.g. "whitelist.txt").
de novo CHROM column with 'un' need to be changed to 1.
In the VCF, the column ID is the LOCUS identification.
Default \code{whitelist.markers = NULL} for no whitelist of markers.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during vcf import.
Default: \code{parallel::detectCores() - 1}.}
}
\value{
The function returns in the global environment a list with
the different tidy dataset from the split vcf. In the working directory,
the splitted VCF files with \code{"_1", "_2"} in the name.
}
\description{
This function allows to split a VCF file in several VCFs,
based on individuals or populations.
}
\examples{
\dontrun{
split.data <- stackr::split_vcf(
data = "batch_1.vcf",
strata = "strata.split.tsv",
blacklist.id = "blacklisted.id.txt",
whitelist.markers = "whitelist.loci.txt")
}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
