% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_colony.R
\name{write_colony}
\alias{write_colony}
\title{Write a \code{COLONY} input file from 9 genomic formats}
\usage{
write_colony(data, strata = NULL, pop.levels = NULL, pop.labels = NULL,
  blacklist.id = NULL, blacklist.genotype = NULL,
  whitelist.markers = NULL, monomorphic.out = TRUE, snp.ld = NULL,
  common.markers = TRUE, maf.thresholds = NULL, maf.pop.num.threshold = 1,
  maf.approach = "SNP", maf.operator = "OR", max.marker = NULL,
  sample.markers = NULL, pop.select = NULL, allele.freq = NULL,
  inbreeding = 0, mating.sys.males = 0, mating.sys.females = 0,
  clone = 0, run.length = 2, analysis = 1, allelic.dropout = 0,
  error.rate = 0.02, print.all.colony.opt = FALSE,
  imputation.method = NULL, hierarchical.levels = "populations",
  num.tree = 50, pred.mean.matching = 0, random.seed = NULL,
  verbose = FALSE, parallel.core = parallel::detectCores() - 1,
  filename = NULL)
}
\arguments{
\item{data}{11 options: VCF (SNPs or Haplotypes, 
to make the vcf population ready, see details below),
plink, stacks haplotype file, genind (library(adegenet)), 
genlight (library(adegenet)), gtypes (library(strataG)), genepop, 
and a data frame in long/tidy or wide format. 
\emph{See details} of \code{\link{tidy_genomic_data}}.}

\item{strata}{(optional/required) Required for VCF and haplotypes files, 
optional for the other file formats supported. 

The strata file is a tab delimited file with 2 columns with header:
\code{INDIVIDUALS} and \code{STRATA}. With a 
data frame of genotypes the strata is the INDIVIDUALS and POP_ID columns, with
PLINK files, the \code{tfam} first 2 columns are used. 
If a \code{strata} file is specified, the strata file will have
precedence. The \code{STRATA} column can be any hierarchical grouping. 
To create a strata file see \code{\link[stackr]{individuals2strata}}.
If you have already run 
\href{http://catchenlab.life.illinois.edu/stacks/}{stacks} on your data, 
the strata file is similar to a stacks `population map file`, make sure you 
have the required column names (\code{INDIVIDUALS} and \code{STRATA}).
Default: \code{strata = NULL}.}

\item{pop.levels}{(optional, string) This refers to the levels in a factor. In this 
case, the id of the pop.
Use this argument to have the pop ordered your way instead of the default 
alphabetical or numerical order. e.g. \code{pop.levels = c("QUE", "ONT", "ALB")} 
instead of the default \code{pop.levels = c("ALB", "ONT", "QUE")}. 
White spaces in population names are replaced by underscore.
Default: \code{pop.levels = NULL}.}

\item{pop.labels}{(optional, string) Use this argument to rename/relabel
your pop or combine your pop. e.g. To combine \code{"QUE"} and \code{"ONT"} 
into a new pop called \code{"NEW"}:
(1) First, define the levels for your pop with \code{pop.levels} argument: 
\code{pop.levels = c("QUE", "ONT", "ALB")}. 
(2) then, use \code{pop.labels} argument: 
\code{pop.levels = c("NEW", "NEW", "ALB")}.
To rename \code{"QUE"} to \code{"TAS"}:
\code{pop.labels = c("TAS", "ONT", "ALB")}.
Default: \code{pop.labels = NULL}. If you find this too complicated, there is also the
\code{strata} argument that can do the same thing, see below.
White spaces in population names are replaced by underscore.}

\item{blacklist.id}{(optional) A blacklist with individual ID and
a column header 'INDIVIDUALS'. The blacklist is an object in your
global environment or a file in the working directory
(e.g. "blacklist.txt").
Default: \code{blacklist.id = NULL}.}

\item{blacklist.genotype}{(optional) Useful to erase genotype with below 
average quality, e.g. genotype with more than 2 alleles in diploid likely 
sequencing errors or genotypes with poor genotype likelihood or coverage. 
The blacklist has a minimum of 2 column headers (markers and individuals). 
Markers can be 1 column (CHROM or LOCUS or POS), 
a combination of 2 (e.g. CHROM and POS or CHROM and LOCUS or LOCUS and POS) or 
all 3 (CHROM, LOCUS, POS). The markers columns must be designated: CHROM (character
or integer) and/or LOCUS (integer) and/or POS (integer). The id column designated
INDIVIDUALS (character) columns header. The blacklist must be in the working 
directory (e.g. "blacklist.genotype.txt"). For de novo VCF, CHROM column 
with 'un' need to be changed to 1. 
Default: \code{blacklist.genotype = NULL} for no blacklist of 
genotypes to erase.}

\item{whitelist.markers}{(optional) A whitelist containing CHROM (character
or integer) and/or LOCUS (integer) and/or
POS (integer) columns header. To filter by chromosome and/or locus and/or by snp.
The whitelist is in the working directory (e.g. "whitelist.txt").
de novo CHROM column with 'un' need to be changed to 1. 
In the VCF, the column ID is the LOCUS identification.
Default \code{whitelist.markers = NULL} for no whitelist of markers.}

\item{monomorphic.out}{(optional) Should the monomorphic 
markers present in the dataset be filtered out ? 
Default: \code{monomorphic.out = TRUE}.}

\item{snp.ld}{(optional) \strong{For VCF file only}. 
SNP short distance linkage disequilibrium pruning. With anonymous markers from
RADseq/GBS de novo discovery, you can minimize linkage disequilibrium (LD) by
choosing among these 3 options: \code{"random"} selection, \code{"first"} or
\code{"last"} SNP on the same short read/haplotype. For long distance linkage
disequilibrium pruning, see details below.
Default: \code{snp.ld = NULL}.}

\item{common.markers}{(optional) Logical. Default: \code{common.markers = TRUE}, 
will only keep markers in common (genotyped) between all the populations.}

\item{maf.thresholds}{(string, double, optional) String with 
local/populations and global/overall maf thresholds, respectively.
e.g. \code{maf.thresholds = c(0.05, 0.1)} for a local maf threshold 
of 0.05 and a global threshold of 0.1. Available for VCF, PLINK and data frame 
files.
Default: \code{maf.thresholds = NULL}.}

\item{maf.pop.num.threshold}{(integer, optional) When maf thresholds are used,
this argument is for the number of pop required to pass the maf thresholds
to keep the locus. Default: \code{maf.pop.num.threshold = 1}}

\item{maf.approach}{(character, optional). 
\code{maf.approach = "haplotype"} : looks at the minimum MAF found on the 
read/haplotype. Using this option will discard all the markers/snp on 
that read based on the thresholds chosen. This method is only available 
for VCF and haplotype files, or tidy data frame from those file types.
\code{maf.approach = "SNP"} : treats all the SNP on the same 
haplotype/read as independent. Doesn't work with haplotype file, 
but does work for all other file type.
Default is \code{maf.approach = "SNP"}.}

\item{maf.operator}{(character, optional) \code{maf.operator = "AND"} or 
default \code{maf.operator = "OR"}.
When filtering over LOCUS or SNP, do you want the local \code{"AND"}
global MAF to pass the thresholds, or ... you want the local \code{"OR"}
global MAF to pass the thresholds, to keep the marker?}

\item{max.marker}{(integer, optional) For large PLINK files,
useful to subsample marker number. e.g. if the data set 
contains 200 000 markers and \code{max.marker = 10000}, 10000 markers are
subsampled randomly from the 200000 markers. If you need specific markers,
use \code{whitelist.markers} argument.
Default: \code{max.marker = NULL}.}

\item{sample.markers}{(number) \code{COLONY} can take a long time to run,
use a random subsample of your markers to speed test \code{COLONY}
e.g. \code{sample.markers = 500} to use only 500 randomly chosen markers.
Default: \code{sample.markers = NULL}, will use all markers.}

\item{pop.select}{(string, optional) Selected list of populations for
the analysis. e.g. \code{pop.select = c("QUE", "ONT")} to select \code{QUE}
and \code{ONT} population samples (out of 20 pops).
Default: \code{pop.select = NULL}}

\item{allele.freq}{(optional, string) Allele frequency can be computed from
a select group.
e.g. \code{allele.freq = "QUE"} or \code{allele.freq = c("QUE", "ONT")}.
Using \code{allele.freq = "overall"} will use all the samples to compute the
allele frequency. 
Default: \code{allele.freq = NULL}, will not compute allele frequency.}

\item{inbreeding}{(boolean) 0/1 no inbreeding/inbreeding.
Default: \code{inbreeding = 0}}

\item{mating.sys.males}{(boolean) Mating system in males.
0/1 polygyny/monogyny.
Default: \code{mating.sys.males = 0}.}

\item{mating.sys.females}{(boolean) Mating system in females.
0/1 polygyny/monogyny.
Default: \code{mating.sys.females = 0}.}

\item{clone}{(boolean) Should clones and duplicated individuals be inferred.
0/1, yes/no. Default: \code{clone = 0}.}

\item{run.length}{(integer) Length of run. 1 (short), 2 (medium), 3 (long),
4 (very long). Start with short or medium run and consider longer run if your
estimates probability are not stable or really good.
Default: \code{run.length = 2}.}

\item{analysis}{(integer) Analysis method. 
0 (Pairwise-Likelihood Score), 1 (Full Likelihood),
2 (combined Pairwise-Likelihood Score and Full Likelihood).
Default: \code{analysis = 1}.}

\item{allelic.dropout}{Locus allelic dropout rate.
Default : \code{allelic.dropout = 0}.}

\item{error.rate}{Locus error rate.
Default:\code{error.rate = 0.02}.}

\item{print.all.colony.opt}{(logical) Should all \code{COLONY} options be printed in the file.


\strong{This require manual curation, for the file to work directly with \code{COLONY}}. 
Default = \code{print.all.colony.opt = FALSE}.}

\item{imputation.method}{(character, optional) 
Methods available for map-independent imputations of missing genotype:

(1) \code{imputation.method = "max"} for Strawman imputation,
the most frequently observed genotypes (ties are broken at random) is used.

(2) \code{imputation.method = "rf"} Random Forests algorithm is used.

(3) \code{imputation.method = "boost"} extreme gradient boosting trees is used.

\code{imputation.method = NULL} will return the original dataset, without
imputation.
Default: \code{imputation.method = "rf"}.}

\item{hierarchical.levels}{(character, optional) \code{c("global", "populations")}.
Should the imputations be computed globally or by populations. Note that
imputing genotype globally can create huge bias for example by
introducing foreign genotypes in some populations (see note for more info).
Default: \code{hierarchical.levels = "populations"}.}

\item{num.tree}{(integer, optional) The number of trees to grow with the 
when \code{imputation.method = "rf"}.
Default: \code{num.tree = 50}.}

\item{pred.mean.matching}{(integer, optional) Used in conjunction with 
random Forests (\code{imputation.method = "rf"}).
Number of candidate non-missing
value to sample from during the predictive mean matching step.
A fast k-nearest neighbor searching algorithms is used with this approach.
\code{pred.mean.matching = 3} will use 3 nighbors.
Default: \code{pred.mean.matching = 0}, avoids this step.}

\item{random.seed}{(integer, optional) For reproducibility, set an integer
that will be used to initialize the random generator. With default,
a random number is generated.
Default: \code{random.seed = NULL}.}

\item{verbose}{(optional, logical) When \code{verbose = TRUE} 
the function is a little more chatty during execution.
Default: \code{verbose = FALSE}.}

\item{parallel.core}{(optional) The number of core used for parallel
execution when \code{imputation.method = "rf"}.
Markers are imputed in parallel, populations are processed sequentially.
Default: \code{parallel::detectCores() - 1}.}

\item{filename}{Name of the acronym for filenaming in the working directory.}
}
\value{
A \code{COLONY} file in your working directory (2 if you selected imputations arguments...)
}
\description{
Write a \code{COLONY} input file from several genomic formats, 
look into \pkg{stackr} \code{\link{tidy_genomic_data}} for supported input
files.
}
\details{
\strong{It is highly recommended to read (twice!) the user guide distributed with
\code{COLONY} to find out the details for input and output of the software.}
 
Not all options are provided here. 

But to ease the process, all the required options to properly run \code{COLONY}
will be printed in the file written in your working directory. 
Change the values accordingly and wisely.


\strong{Imputations}
The imputations using Random Forest requires more time to compute 
and can take several minutes and hours depending on the size of 
the dataset and polymorphism of the species used. e.g. with a 
low polymorphic taxa, and a data set containing 30\% missing data, 
5 000 haplotypes loci and 500 individuals will require 15 min.
For details about imputations, look into \pkg{stackr} \code{\link{stackr_imputations_module}}
}
\note{
\code{common.markers} argument should be left to the default:  \code{common.markers = TRUE}.


\code{monomorphic.out} argument should be left to the default:  \code{monomorphic.out = TRUE}.


\strong{using a VCF with several SNP per haplotypes/read for input?}

Please consider keeping just 1 SNP per read, \code{COLONY} doesn't like this
kind of linkage... use the argument \code{snp.ld}.
}
\examples{
\dontrun{
# Simplest way to run the function:
colony.file <- stackr::write_colony(
data = "batch_1.vcf",
strata = "strata.treefrog.tsv"
)

# With imputations and a STACKS haplotypes file:
colony.file <- stackr::write_colony(
data = "batch_1.haplotypes.tsv",
strata = "strata.treefrog.tsv",
imputation.method = "rf"
)

# Now using a whitelist of markers and keeping only the first SNP on each read:
colony.file <- stackr::write_colony(
data = "batch_1.haplotypes.tsv",
strata = "strata.treefrog.tsv",
whitelist.markers = "whitelist.vcf.txt",
snp.ld = "first",
common.markers = TRUE, # this is also a default...
monomorphic.out = TRUE # this is also a default...
)
}
}
\references{
Catchen JM, Amores A, Hohenlohe PA et al. (2011) 
Stacks: Building and Genotyping Loci De Novo From Short-Read Sequences. 
G3, 1, 171-182.

Catchen JM, Hohenlohe PA, Bassham S, Amores A, Cresko WA (2013) 
Stacks: an analysis tool set for population genomics. 
Molecular Ecology, 22, 3124-3140.

Ishwaran H. and Kogalur U.B. (2015). Random Forests for Survival,
 Regression and Classification (RF-SRC), R package version 1.6.1.

Ishwaran H. and Kogalur U.B. (2007). Random survival forests
for R. R News 7(2), 25-31.

Ishwaran H., Kogalur U.B., Blackstone E.H. and Lauer M.S. (2008).
Random survival forests. Ann. Appl. Statist. 2(3), 841--860.

Jones OR, Wang J (2010) COLONY: a program for parentage and 
sibship inference from multilocus genotype data. 
Molecular Ecology Resources, 10, 551–555.

Wang J (2012) Computationally Efficient Sibship and 
Parentage Assignment from Multilocus Marker Data. Genetics, 191, 183–194.
}
\seealso{
\code{COLONY} is available on Jinliang Wang web site 
\url{http://www.zsl.org/science/software/colony}

\code{randomForestSRC} is available on 
CRAN \url{http://cran.r-project.org/web/packages/randomForestSRC/} 
and github \url{https://github.com/ehrlinger/randomForestSRC}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
