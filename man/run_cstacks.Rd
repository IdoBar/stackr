% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_cstacks.R
\name{run_cstacks}
\alias{run_cstacks}
\title{Run STACKS cstacks module}
\arguments{
\item{input.path}{Path to input file. 
Default: \code{input.path = "06_ustacks_cstacks_sstacks"}}

\item{sample.list}{This is for the \code{s} option in
\href{http://catchenlab.life.illinois.edu/stacks/comp/sstacks.php}{cstacks}. 
\code{s: Filename prefix from which to load loci in the catalog}.
Here, you have 2 choices: 1. you leave empty and let the function use the 
default:\code{sample.list = NULL} which will scan for the files in the 
\code{input.path} folder given above. 2. you supply a character string of the
samples. This could come from the \code{INDIVIDUALS_REP} column of the 
project info file, e.g. \code{sample.list = project.info$INDIVIDUALS_REP}.}

\item{b}{MySQL ID of this batch. 
Default: \code{b = 1}.}

\item{o}{output path to write results.
Default: \code{o = "06_ustacks_cstacks_sstacks"}}

\item{g}{Base catalog matching on genomic location, not sequence identity.
Default: \code{g = FALSE}}

\item{m}{Include tags in the catalog that match to more than one entry.
Default: \code{m = FALSE}}

\item{n}{Number of mismatches allowed between sample tags when generating 
the catalog.
Default: \code{n = 1}}

\item{p}{Enable parallel execution with num_threads threads. 
Default: \code{p = 4}}

\item{h}{Display this help messsage.
Default: \code{h = FALSE}}

\item{catalog.path}{This is for the "Catalog editing" part in cstacks where 
you can provide the path to an existing catalog.
cstacks will add data to this existing catalog.
With default: \code{catalog.path = NULL}, the catalog files is inside the 
input.path filder along the samples files and detected automatically. 
In the catalog files are detected, the samples in the \code{sample.list} argument
will be included in this catalog.}

\item{gapped}{Gapped assembly options: do you want to preform 
gapped alignments between stacks.
Default: \code{gapped = TRUE}}

\item{max_gaps}{The number of gaps allowed between stacks before merging.
Default: \code{max_gaps = 2}}

\item{min_aln_len}{The minimum length of aligned sequence in a gapped 
alignment.
Default: \code{min_aln_len = 0.8}}

\item{k_len}{Specify k-mer size for matching between between catalog loci 
(automatically calculated by default).
Default: \code{k_len = NULL}}

\item{report_mmatches}{Report query loci that match more than one catalog locus.
Default: \cpde{report_mmatches = FALSE}}
}
\value{
\href{http://catchenlab.life.illinois.edu/stacks/comp/sstacks.php}{sstacks}
returns a \code{.matches.tsv.gz file for each sample}
}
\description{
Run \href{http://catchenlab.life.illinois.edu/stacks/}{STACKS}
\href{http://catchenlab.life.illinois.edu/stacks/comp/cstacks.php}{cstacks} 
module inside R!
Inside the folder \code{06_ustacks_cstacks_sstacks}, you should have:
\itemize{
  \item \strong{4 files for each samples:} The sample name is the prefix of 
  the files ending with:
\code{.alleles.tsv.gz, .models.tsv.gz, .snps.tsv.gz, .tags.tsv.gz}.
Those files are created in the 
\href{http://catchenlab.life.illinois.edu/stacks/comp/ustacks.php}{ustacks}
module.
}
}
\details{
\strong{Computer or server problem during the cstacks ?} Look 
in the log file to see which individuals remains to be included. Create a 
new list of individuals to include and use the catalog.path argument to point
to the catalog created before the problem.
}
\examples{
\dontrun{
# The simplest form of the function:
run_cstacks()
# that's it ! Now if you have your own workflow folders, etc. See below.
Next example, let say you only want to include 10 individuals/pop and 
include in the catalog samples with more than 2000000 reads. With the project
info file in the global environment:
individuals.catalog <- project.info.file) \%>\% 
filter(RETAINED > 2000000) \%>\% 
group_by(POP_ID) \%>\% 
sample_n(size = 10, replace = FALSE) \%>\% 
ungroup \%>\% 
arrange(desc(RETAINED)) \%>\% 
distinct(INDIVIDUALS_REP)
# The next line will give you the list of individuals to include
individuals.catalog <- individuals.catalog$INDIVIDUALS_REP

# To keep your info file updated with this information:
project.info.file <- project.info.file \%>\% 
mutate(CATALOG = if_else(INDIVIDUALS_REP \%in\% individuals.catalog, 
true = "catalog", false = "not_catalog")
)
write_tsv(project.info.file, "project.info.catalog.tsv")

# Then run the command this way:
run_cstacks (
sample.list = individuals.catalog, # or 
input.path = "06_ustacks_cstacks_sstacks",
catalog.path = NULL, 
b = 1, 
o = "06_ustacks_cstacks_sstacks", 
g = FALSE, 
m = FALSE, 
n = 1,
p = 32, 
h = FALSE,
gapped = TRUE, max_gaps = 2, min_aln_len = 0.8,
k_len = NULL, report_mmatches = FALSE
)
}
}

