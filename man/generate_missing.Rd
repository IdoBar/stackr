% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_missing.R
\name{generate_missing}
\alias{generate_missing}
\title{Generate missing data}
\usage{
generate_missing(data, output, filename = NULL, average.read.depth = 10,
  min.reads = 6, alpha.individuals = 5, alpha.marker = 5,
  random.seed = NULL, imputation.method = NULL, impute = "genotype",
  imputations.group = "populations", num.tree = 100, iteration.rf = 10,
  split.number = 100, verbose = FALSE,
  parallel.core = parallel::detectCores() - 1, ...)
}
\arguments{
\item{data}{6 options: vcf (need strata argument),
plink, stacks haplotype file, genind, genlight, genepop, 
and a data frame in wide format. 
\emph{See details} in \code{\link[stackr]{tidy_genomic_data}}.}

\item{output}{Several options: tidy, genind, genlight, vcf, plink, genepop,
structure, arlequin, hierfstat, gtypes, betadiv. Use a character string,
e.g. \code{output = c("genind", "genepop", "structure")}, to have preferred
output formats generated. The tidy format is generated automatically.}

\item{filename}{(optional) The filename prefix for the objet in the global environment
or the working directory. Default: \code{filename = NULL}. A default name will be used,
customized with the output file(s) selected.}

\item{average.read.depth}{(integer) Desired average read depth at a marker in an individual.
Default: \code{average.read.depth = 10}.}

\item{min.reads}{(integer) Minimum number of simulated reads to call a SNP.
Default: \code{min.reads = 6}.}

\item{alpha.individuals}{(integer) Shape parameter for gamma distribution over individuals.
Default: \code{alpha.individuals = 5}.}

\item{alpha.marker}{(integer) Shape parameter for gamma distribution over loci.
Default: \code{alpha.marker = 5}.}

\item{random.seed}{(integer) Random seed number for reproducibility. 
With default: \code{random.seed = NULL} the number is generated automatically and randomly.}

\item{imputation.method}{(character, optional) 
Methods available for map-independent imputations of missing genotype: 
(1) \code{"max"} to use the most frequent category for imputations.
(2) \code{"rf"} using Random Forest algorithm. 
Default: no imputation \code{imputation.method = NULL}.}

\item{impute}{(character, optional) Imputation on missing genotype 
\code{impute = "genotype"} or alleles \code{impute = "allele"}.
Default: \code{"genotype"}.}

\item{imputations.group}{(character, optional) \code{"global"} or \code{"populations"}.
Should the imputations be computed globally or by populations. If you choose
global, turn the verbose to \code{TRUE}, to see progress.
Default = \code{"populations"}.}

\item{num.tree}{(integer, optional) The number of trees to grow in Random Forest. 
Default: \code{num.tree = 100}.}

\item{iteration.rf}{(integer, optional) The number of iterations of missing data algorithm
in Random Forest. 
Default: \code{iteration.rf = 10}.}

\item{split.number}{(integer, optional) Non-negative integer value used to specify
random splitting in Random Forest. 
Default: \code{split.number = 100}.}

\item{verbose}{(logical, optional) Should trace output be enabled on each iteration
in Random Forest ? 
Default: \code{verbose = FALSE}.}

\item{parallel.core}{(optional) The number of core for OpenMP shared-memory parallel
programming of Random Forest imputations. For more info on how to install the
OpenMP version see \code{\link[randomForestSRC]{randomForestSRC-package}}.
If not selected \code{detectCores()-1} is used as default.}

\item{...}{Other parameters passed to the function \code{\link[stackr]{tidy_genomic_data}} 
for the input file and \code{\link[stackr]{genomic_converter}} for the output file parameter.}
}
\value{
In the global environment, a list with the tidy data set, the random.seed and function.call.
In the working directory, the output file with format selected.
}
\description{
Generate missing genotypes following a compound Dirichlet-multinomial distribution.
}
\examples{
\dontrun{
The simplest form of the function:

datamissing <- generate_missing(
data = "plink.tped",
output = "genepop"
)
}
}
\author{
Eric C. Anderson \email{eric.anderson@noaa.gov}, Greg L. Owens \email{gregory.owens@alumni.ubc.ca} and Thierry Gosselin \email{thierrygosselin@icloud.com}
}

